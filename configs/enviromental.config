docker {
  enabled = true
  temp = 'auto'
}

profiles {
  
  test { includeConfig './test.config' }
  
  
}

params{
  // Defaults only, expect to be overwritten
  max_memory                 = '256.GB'
  max_cpus                   = 64
  max_time                   = '48.h'
  
}



process {
  
  // withLabel:process_ultra_low {
  //   cpus = { check_max( 2, 'cpus' ) }
  //   memory = { check_max( 4.GB, 'memory' ) }
  //   time = { check_max( 12.h * task.attempt, 'time' ) }
  // }

  // withLabel:process_low {
  //   cpus = { check_max( 2, 'cpus' ) }
  //   memory = { check_max( 8.GB, 'memory' ) }
  //   time = { check_max( 12.h * task.attempt, 'time' ) }
  // }
  
  // withLabel:process_low_low_medium {
  //   cpus = { check_max( 8, 'cpus' ) }
  //   memory = { task.exitStatus in [143,137,104,134,139] ? check_max( 8.GB * task.attempt, 'memory' ) : check_max( 8.GB, 'memory' ) }
  //   time = { check_max( 18.h * task.attempt, 'time' ) }
  // }
  
  
  // withLabel:process_low_medium {
  //   cpus = { check_max( 8, 'cpus' ) }
  //   memory = { task.exitStatus in [143,137,104,134,139] ? check_max( 32.GB * task.attempt, 'memory' ) : check_max( 32.GB, 'memory' ) }
  //   time = { check_max( 18.h * task.attempt, 'time' ) }
  // }
  
  // withLabel:process_medium {
  //   cpus = { check_max( 16, 'cpus' ) }
  //   memory = { task.exitStatus in [143,137,104,134,139] ? check_max( 64.GB * task.attempt, 'memory' ) : check_max( 64.GB, 'memory' ) }
  //   time = { check_max( 18.h * task.attempt, 'time' ) }
  // }
  
  // withLabel:process_medium_high {
  //   cpus = { check_max( 32, 'cpus' ) }
  //   memory = { check_max( 64.GB, 'memory' ) }
  //   time = { check_max( 12.h * task.attempt, 'time' ) }
  // }
  
  // withLabel:process_high_mem {
  //   cpus = { check_max( 4, 'cpus' ) }
  //   memory = { check_max( 40.GB, 'memory' ) }
  //   time = { check_max( 12.h * task.attempt, 'time' ) }
  // }
  
  // withLabel:process_high {
  //   cpus = { check_max( 64, 'cpus' ) }
  //   memory = { check_max( 128.GB, 'memory' ) }
  //   time = { check_max( 12.h * task.attempt, 'time' ) }
  // }
  
  // withLabel:process_super_high {
  //   cpus = { check_max( 64, 'cpus' ) }
  //   memory = { check_max( 256.GB, 'memory' ) }
  //   time = { check_max( 12.h * task.attempt, 'time' ) }
  // }
 
  
}


// // Function to ensure that resource requirements don't go beyond
// // a maximum limit
// def check_max(obj, type) {
//     if (type == 'memory') {
//         try {
//             if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
//                 return params.max_memory as nextflow.util.MemoryUnit
//             else
//                 return obj
//         } catch (all) {
//             println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
//             return obj
//         }
//     } else if (type == 'time') {
//         try {
//             if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
//                 return params.max_time as nextflow.util.Duration
//             else
//                 return obj
//         } catch (all) {
//             println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
//             return obj
//         }
//     } else if (type == 'cpus') {
//         try {
//             return Math.min( obj, params.max_cpus as int )
//         } catch (all) {
//             println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
//             return obj
//         }
//     }
// }
